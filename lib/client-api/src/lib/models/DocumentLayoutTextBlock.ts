/* tslint:disable */
/* eslint-disable */
/**
 * InkStain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DocumentLayoutTextBlockBoundingBox } from './DocumentLayoutTextBlockBoundingBox';
import {
  DocumentLayoutTextBlockBoundingBoxFromJSON,
  DocumentLayoutTextBlockBoundingBoxFromJSONTyped,
  DocumentLayoutTextBlockBoundingBoxToJSON,
} from './DocumentLayoutTextBlockBoundingBox';

/**
 *
 * @export
 * @interface DocumentLayoutTextBlock
 */
export interface DocumentLayoutTextBlock {
  /**
   *
   * @type {string}
   * @memberof DocumentLayoutTextBlock
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof DocumentLayoutTextBlock
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof DocumentLayoutTextBlock
   */
  text: string;
  /**
   *
   * @type {Array<string>}
   * @memberof DocumentLayoutTextBlock
   */
  childrenIds: Array<string>;
  /**
   *
   * @type {DocumentLayoutTextBlockBoundingBox}
   * @memberof DocumentLayoutTextBlock
   */
  boundingBox: DocumentLayoutTextBlockBoundingBox;
}

/**
 * Check if a given object implements the DocumentLayoutTextBlock interface.
 */
export function instanceOfDocumentLayoutTextBlock(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'text' in value;
  isInstance = isInstance && 'childrenIds' in value;
  isInstance = isInstance && 'boundingBox' in value;

  return isInstance;
}

export function DocumentLayoutTextBlockFromJSON(
  json: any
): DocumentLayoutTextBlock {
  return DocumentLayoutTextBlockFromJSONTyped(json, false);
}

export function DocumentLayoutTextBlockFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DocumentLayoutTextBlock {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    type: !exists(json, 'type') ? undefined : json['type'],
    id: json['id'],
    text: json['text'],
    childrenIds: json['childrenIds'],
    boundingBox: DocumentLayoutTextBlockBoundingBoxFromJSON(
      json['boundingBox']
    ),
  };
}

export function DocumentLayoutTextBlockToJSON(
  value?: DocumentLayoutTextBlock | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    type: value.type,
    id: value.id,
    text: value.text,
    childrenIds: value.childrenIds,
    boundingBox: DocumentLayoutTextBlockBoundingBoxToJSON(value.boundingBox),
  };
}
