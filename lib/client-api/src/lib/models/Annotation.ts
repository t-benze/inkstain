/* tslint:disable */
/* eslint-disable */
/**
 * InkStain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnnotationData } from './AnnotationData';
import {
  AnnotationDataFromJSON,
  AnnotationDataFromJSONTyped,
  AnnotationDataToJSON,
} from './AnnotationData';

/**
 *
 * @export
 * @interface Annotation
 */
export interface Annotation {
  /**
   *
   * @type {string}
   * @memberof Annotation
   */
  id: string;
  /**
   *
   * @type {number}
   * @memberof Annotation
   */
  page: number;
  /**
   *
   * @type {AnnotationData}
   * @memberof Annotation
   */
  data: AnnotationData;
  /**
   *
   * @type {string}
   * @memberof Annotation
   */
  comment?: string;
}

/**
 * Check if a given object implements the Annotation interface.
 */
export function instanceOfAnnotation(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'page' in value;
  isInstance = isInstance && 'data' in value;

  return isInstance;
}

export function AnnotationFromJSON(json: any): Annotation {
  return AnnotationFromJSONTyped(json, false);
}

export function AnnotationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Annotation {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    page: json['page'],
    data: AnnotationDataFromJSON(json['data']),
    comment: !exists(json, 'comment') ? undefined : json['comment'],
  };
}

export function AnnotationToJSON(value?: Annotation | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    page: value.page,
    data: AnnotationDataToJSON(value.data),
    comment: value.comment,
  };
}
