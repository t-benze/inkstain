/* tslint:disable */
/* eslint-disable */
/**
 * InkStain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DocumentSearchResultMetaAttributesValue } from './DocumentSearchResultMetaAttributesValue';
import {
  DocumentSearchResultMetaAttributesValueFromJSON,
  DocumentSearchResultMetaAttributesValueFromJSONTyped,
  DocumentSearchResultMetaAttributesValueToJSON,
} from './DocumentSearchResultMetaAttributesValue';

/**
 *
 * @export
 * @interface DocumentSearchResultMeta
 */
export interface DocumentSearchResultMeta {
  /**
   *
   * @type {string}
   * @memberof DocumentSearchResultMeta
   */
  mimetype: string;
  /**
   *
   * @type {Array<string>}
   * @memberof DocumentSearchResultMeta
   */
  tags?: Array<string>;
  /**
   *
   * @type {{ [key: string]: DocumentSearchResultMetaAttributesValue; }}
   * @memberof DocumentSearchResultMeta
   */
  attributes?: { [key: string]: DocumentSearchResultMetaAttributesValue };
}

/**
 * Check if a given object implements the DocumentSearchResultMeta interface.
 */
export function instanceOfDocumentSearchResultMeta(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'mimetype' in value;

  return isInstance;
}

export function DocumentSearchResultMetaFromJSON(
  json: any
): DocumentSearchResultMeta {
  return DocumentSearchResultMetaFromJSONTyped(json, false);
}

export function DocumentSearchResultMetaFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DocumentSearchResultMeta {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    mimetype: json['mimetype'],
    tags: !exists(json, 'tags') ? undefined : json['tags'],
    attributes: !exists(json, 'attributes')
      ? undefined
      : mapValues(
          json['attributes'],
          DocumentSearchResultMetaAttributesValueFromJSON
        ),
  };
}

export function DocumentSearchResultMetaToJSON(
  value?: DocumentSearchResultMeta | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    mimetype: value.mimetype,
    tags: value.tags,
    attributes:
      value.attributes === undefined
        ? undefined
        : mapValues(
            value.attributes,
            DocumentSearchResultMetaAttributesValueToJSON
          ),
  };
}
