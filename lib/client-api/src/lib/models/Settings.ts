/* tslint:disable */
/* eslint-disable */
/**
 * InkStain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChatSettings } from './ChatSettings';
import {
  ChatSettingsFromJSON,
  ChatSettingsFromJSONTyped,
  ChatSettingsToJSON,
} from './ChatSettings';
import type { LayoutSettings } from './LayoutSettings';
import {
  LayoutSettingsFromJSON,
  LayoutSettingsFromJSONTyped,
  LayoutSettingsToJSON,
} from './LayoutSettings';

/**
 *
 * @export
 * @interface Settings
 */
export interface Settings {
  /**
   *
   * @type {string}
   * @memberof Settings
   */
  ocrService: SettingsOcrServiceEnum;
  /**
   *
   * @type {string}
   * @memberof Settings
   */
  alibabaAccessKeyId?: string;
  /**
   *
   * @type {ChatSettings}
   * @memberof Settings
   */
  chatService?: ChatSettings;
  /**
   *
   * @type {LayoutSettings}
   * @memberof Settings
   */
  layout: LayoutSettings;
}

/**
 * @export
 */
export const SettingsOcrServiceEnum = {
  Alibaba: 'alibaba',
  Default: 'default',
} as const;
export type SettingsOcrServiceEnum =
  (typeof SettingsOcrServiceEnum)[keyof typeof SettingsOcrServiceEnum];

/**
 * Check if a given object implements the Settings interface.
 */
export function instanceOfSettings(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'ocrService' in value;
  isInstance = isInstance && 'layout' in value;

  return isInstance;
}

export function SettingsFromJSON(json: any): Settings {
  return SettingsFromJSONTyped(json, false);
}

export function SettingsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Settings {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    ocrService: json['ocrService'],
    alibabaAccessKeyId: !exists(json, 'alibabaAccessKeyId')
      ? undefined
      : json['alibabaAccessKeyId'],
    chatService: !exists(json, 'chatService')
      ? undefined
      : ChatSettingsFromJSON(json['chatService']),
    layout: LayoutSettingsFromJSON(json['layout']),
  };
}

export function SettingsToJSON(value?: Settings | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    ocrService: value.ocrService,
    alibabaAccessKeyId: value.alibabaAccessKeyId,
    chatService: ChatSettingsToJSON(value.chatService),
    layout: LayoutSettingsToJSON(value.layout),
  };
}
