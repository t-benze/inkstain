/* tslint:disable */
/* eslint-disable */
/**
 * InkStain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DocumentLayoutTextBlock } from './DocumentLayoutTextBlock';
import {
  DocumentLayoutTextBlockFromJSON,
  DocumentLayoutTextBlockFromJSONTyped,
  DocumentLayoutTextBlockToJSON,
} from './DocumentLayoutTextBlock';
import type { DocumentLayoutTextLine } from './DocumentLayoutTextLine';
import {
  DocumentLayoutTextLineFromJSON,
  DocumentLayoutTextLineFromJSONTyped,
  DocumentLayoutTextLineToJSON,
} from './DocumentLayoutTextLine';

/**
 *
 * @export
 * @interface DocumentTextDetectionData
 */
export interface DocumentTextDetectionData {
  /**
   *
   * @type {Array<DocumentLayoutTextBlock>}
   * @memberof DocumentTextDetectionData
   */
  blocks: Array<DocumentLayoutTextBlock>;
  /**
   *
   * @type {Array<DocumentLayoutTextLine>}
   * @memberof DocumentTextDetectionData
   */
  lines: Array<DocumentLayoutTextLine>;
}

/**
 * Check if a given object implements the DocumentTextDetectionData interface.
 */
export function instanceOfDocumentTextDetectionData(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'blocks' in value;
  isInstance = isInstance && 'lines' in value;

  return isInstance;
}

export function DocumentTextDetectionDataFromJSON(
  json: any
): DocumentTextDetectionData {
  return DocumentTextDetectionDataFromJSONTyped(json, false);
}

export function DocumentTextDetectionDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DocumentTextDetectionData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    blocks: (json['blocks'] as Array<any>).map(DocumentLayoutTextBlockFromJSON),
    lines: (json['lines'] as Array<any>).map(DocumentLayoutTextLineFromJSON),
  };
}

export function DocumentTextDetectionDataToJSON(
  value?: DocumentTextDetectionData | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    blocks: (value.blocks as Array<any>).map(DocumentLayoutTextBlockToJSON),
    lines: (value.lines as Array<any>).map(DocumentLayoutTextLineToJSON),
  };
}
