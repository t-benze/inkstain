components:
  schemas:
    Space:
      type: object
      required:
        - path
        - name
        - key
      properties:
        path:
          type: string
          description: File system path to the space.
        name:
          type: string
          description: Name of the space.
        key:
          type: string
          description: Key of the space.
    CreateSpaceOperationType:
      type: string
      enum:
        - new
        - inkstain
    CreateSpaceRequest:
      type: object
      required:
        - path
      properties:
        name:
          type: string
          description: Name of the space.
          minLength: 1
          maxLength: 100
        path:
          type: string
          description: Key of the space.
          minLength: 1
    DocumentTextDetection:
      type: object
      properties:
        Blocks:
          type: array
          items:
            type: object
            properties:
              BlockType:
                type: string
              ColumnIndex:
                type: number
              ColumnSpan:
                type: number
              Confidence:
                type: number
              EntityTypes:
                type: array
                items:
                  type: string
              Geometry:
                type: object
                properties:
                  BoundingBox:
                    type: object
                    properties:
                      Height:
                        type: number
                      Left:
                        type: number
                      Top:
                        type: number
                      Width:
                        type: number
                  Polygon:
                    type: array
                    items:
                      type: object
                      properties:
                        X:
                          type: number
                        Y:
                          type: number
              Id:
                type: string
              Page:
                type: number
              Query:
                type: object
                properties:
                  Alias:
                    type: string
                  Pages:
                    type: array
                    items:
                      type: string
                  Text:
                    type: string
              Relationships:
                type: array
                items:
                  type: object
                  properties:
                    Ids:
                      type: array
                      items:
                        type: string
                    Type:
                      type: string
              RowIndex:
                type: number
              RowSpan:
                type: number
              SelectionStatus:
                type: string
              Text:
                type: string
              TextType:
                type: string
        DetectDocumentTextModelVersion:
          type: string
        DocumentMetadata:
          type: object
          properties:
            Pages:
              type: number
    DocumentMeta:
      type: object
      properties:
        mimetype:
          type: string
        tags:
          type: array
          items:
            type: string
        attributes:
          type: object
          additionalProperties:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
      required:
        - mimetype
    DocumentSearchResult:
      type: object
      properties:
        documentPath:
          type: string
        meta:
          $ref: '#/components/schemas/DocumentMeta'
      required:
        - documentPath
        - meta
    DocumentTag:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    Task:
      type: object
      properties:
        status:
          type: string
          enum: ['pending', 'running', 'completed', 'failed']
        progress:
          type: number
          minimum: 0
          maximum: 100
      required:
        - status
        - progress
    Annotation:
      type: object
      required:
        - id
        - data
        - page
      properties:
        id:
          type: string
        page:
          type: number
        data:
          type: object
          properties:
            type:
              type: string
              enum:
                - highlight
                - drawing
                - bookmark
          additionalProperties: true
        comment:
          type: string
    HighlightData:
      type: object
      required:
        - type
        - color
      properties:
        type:
          type: string
          enum:
            - highlight
        color:
          type: string
    DrawingData:
      type: object
      required:
        - type
        - attributes
        - shape
      properties:
        type:
          type: string
          enum:
            - drawing
        shape:
          type: string
          description: name of SVG shape
        attributes:
          type: object
          description: SVG element attributes
    BookmarkData:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - bookmark
